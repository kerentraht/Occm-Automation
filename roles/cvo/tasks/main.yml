---
# tasks file for cvo

    - name: Print Auth Domain
      debug: msg={{auth0_domain}}
    - name: Get Token
      uri:
        url: https://{{auth0_domain}}/oauth/token
        method: POST
        body_format: json
        return_content: yes
        body: {"grant_type":"refresh_token", "refresh_token": "{{refToken}}", "client_id": "{{client_id}}"}
        status_code: 200,204,202
      register: token_response
      ignore_errors: no
    - name: set token & token_type
      set_fact: token="{{ (token_response.content|from_json).access_token }}"
    - set_fact: token_type="{{ (token_response.content|from_json).token_type }}"
    - name: Get Tenant
      uri:
        url: "http://{{api_backend}}/occm/api/tenants"
        method: GET
        headers:
           Authorization: "{{token_type}} {{ token }}"
           X-Agent-Id: "{{connector_id}}"
           Content-Type: application/json
           Referer: "Ansible"
        status_code: 200,204,202
        timeout: 180
      register: tenant_response
    - name: Extract workspaces list
      set_fact:
        workspace_ids: '{{ tenant_response.json | json_query("[].{ workspace_name: name, workspace_id: publicId }") }}'
    - name: Locate the workspace and define ID
      set_fact:
        tenant_id: "{{ item.workspace_id }}"
      when: item.workspace_name == my_workspace
      with_items: "{{ workspace_ids }}"
    - name: Verify that the workspace was located
      block:
      - debug: msg="Workspace {{my_workspace}} was located with ID {{':'}} {{tenant_id}}"
        when: tenant_id is defined
      - fail: msg="Workspace named {{':'}} {{my_workspace}} does not exist."
        when: tenant_id is not defined
    - name: Create Template File For CVO HA
      template: src=../templates/cvo_aws_ha.j2 dest={{ lookup('env', 'PWD') }}/playbooks/roles/cvo/templates/cvo_aws.json
      when: envType == "awsha"
    - name: Create Template File For CVO SN
      template: src=../templates/cvo_aws_sn.j2 dest={{ lookup('env', 'PWD') }}/playbooks/roles/cvo/templates/cvo_aws.json
      when: envType == "aws"
    - name: Create OTC
      uri:
        url: "https://{{api_backend}}/occm/api/{{we_type_path}}/working-environments"
        method: POST
        headers:
           X-Agent-Id: "{{connector_id}}"
           Authorization: "{{token_type}} {{ token }}"
           Content-Type: application/json
           Referer: "Ansible"
        body_format: json
        body: "{{ lookup('file','../templates/cvo_aws.json') }}"
        status_code: 200,204,202
        timeout: 180
      register: otc_response
    - name: Print OTC
      debug: msg={{otc_response.oncloud_request_id}}
    - debug: msg={{otc_response.json.publicId}}
    - name: Wait for OTC
      uri:
        url: "http://{{api_backend}}/occm/api/audit/activeTask/{{otc_response.oncloud_request_id}}"
        method: GET
        headers:
           X-Agent-Id: "{{connector_id}}"
           Authorization: "{{token_type}} {{ token }}"
           Referer: "Ansible"
        status_code: 200,204,202
        body_format: json
        timeout: 180
      register: audit_response
      until: audit_response.json.status != 0
      retries: 40
      delay: 300
    - name: set response
      set_fact: status="{{ audit_response.json.status }}"
    - name: Print Result
      debug: msg="Done Success"
      when: status == '1'
    - name: Print Result
      debug: msg="Done Error"
      when: status == '-1'
