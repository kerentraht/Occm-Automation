---
# tasks file for aggregate 
# Create Template File
    - name: Print Auth Domain
      debug: msg={{auth0_domain}}
    - name: Get Token
      uri:
        url: https://{{auth0_domain}}/oauth/token
        method: POST
        body_format: json
        return_content: yes
        body: {"grant_type":"refresh_token", "refresh_token": "{{refToken}}", "client_id": "{{client_id}}"}
        status_code: 200,204,202
      register: token_response
      ignore_errors: no
    - name: set token & token_type
      set_fact: token="{{ (token_response.content|from_json).access_token }}"
    - set_fact: token_type="{{ (token_response.content|from_json).token_type }}"
    - name: Get OTC Id
      uri:
        url: "http://{{api_backend}}/occm/api/vsa/working-environments"
        method: GET
        headers:
           Authorization: "{{token_type}} {{ token }}"
           X-Agent-Id: "{{connector_id}}"
           Content-Type: application/json
           Referer: "Ansible"
        status_code: 200,204,202
        timeout: 180
      register: otc_response
    - name: Extract WEs list
      set_fact:
        environments_ids: '{{ otc_response.json | json_query("[].{environment_name: name, environment_id: publicId}") }}'
    - name: Locate the environment and define ID
      set_fact:
        we_id: "{{ line_item.environment_id }}"
      when: line_item.environment_name == otc_name
      with_items: "{{ environments_ids }}"
      loop_control:
        loop_var: line_item
    - name: Verify that the env was located
      block:
      - debug: msg="Environment {{otc_name}} was located with ID {{':'}} {{we_id}}"
        when: we_id is defined
      - fail: msg="Environment named {{':'}} {{otc_name}} does not exist."
        when: we_id is not defined
    - name: Print WE ID
      debug: msg={{we_id}}
    - name: Create Template File For aggregate
      template: src=../templates/aggregate.j2 dest={{ lookup('env', 'PWD') }}/playbooks/roles/aggregate/templates/aggregate.json
    - name: Create Aggregate
      uri:
        url: "https://{{api_backend}}/occm/api/{{we_type_path}}/aggregates"
        method: POST
        headers:
           Authorization: "{{token_type}} {{ token }}"
           X-Agent-Id: "{{connector_id}}"
           Content-Type: application/json
           Referer: "Ansible"
        body_format: json
        body: "{{ lookup('file','../templates/aggregate.json') }}"
        status_code: 200,204,202
        timeout: 180
      register: aggr_response
    - name: Print Create aggregate request ID
      debug: msg={{aggr_response.oncloud_request_id}}
    - name: Wait for Aggregate creation
      uri:
        url: "http://{{api_backend}}/occm/api/audit/activeTask/{{aggr_response.oncloud_request_id}}"
        method: GET
        headers:
           Authorization: "{{token_type}} {{ token }}"
           X-Agent-Id: "{{connector_id}}"
           Content-Type: application/json
           Referer: "Ansible"
        status_code: 200,204,202
        body_format: json
        timeout: 180
      register: audit_response
      until: audit_response.json.status !=   0
      retries: 10
      delay: 60
    - name: set response
      set_fact: status="{{ audit_response.json.status }}"
    - name: Print Aggregate Result
      debug: msg="Done Success"
      when: status == '1'
    - name: Print Aggregate Result
      debug: msg="Done Error"
      when: status == '-1'
